package com.spark.ml.breeze

import breeze.linalg.{DenseMatrix, det, eig, inv, pinv, svd}

/**
  * author : kongcong  
  * number : 27
  * date : 2017/7/6
  */
object BreezeLinearAlgebra {
  def main(args: Array[String]): Unit = {
    val a: DenseMatrix[Double] = DenseMatrix((1.0, 2.0, 3.0), (4.0, 5.0, 6.0) ,(7.0, 8.0, 9.0))
    println(a)
    /**
      * 1.0  2.0  3.0
      * 4.0  5.0  6.0
      * 7.0  8.0  9.0
      */

    val b: DenseMatrix[Double] = DenseMatrix((1.0, 1.0, 1.0), (1.0, 1.0, 1.0), (1.0, 1.0, 1.0))
    println(b)
    /**
      * 1.0  1.0  1.0
      * 1.0  1.0  1.0
      * 1.0  1.0  1.0
      */

    // 线性求解
    val matrix: DenseMatrix[Double] = a \ b
    println(matrix)
    /**
      * -2.5  -2.5  -2.5
      * 4.0   4.0   4.0
      * -1.5  -1.5  -1.5
      */

    // 转置
    val t: DenseMatrix[Double] = a.t
    println(t)
    /**
      * 1.0  4.0  7.0
      * 2.0  5.0  8.0
      * 3.0  6.0  9.0
      */

    // 求特征值
    // 定义：如果Ax=λx成立，那么这样的数λ称为矩阵A特征值，非零向量x称为A的对应于特征值λ的特征向量
    val det1: Double = det(a)
    println(det1)    // 6.661338147750939E-16

    // 求特性向量
    println(eig(a))
    // Eig(
    // DenseVector(16.116843969807043, -1.1168439698070427, -1.3036777264747022E-15),
    // DenseVector(0.0, 0.0, 0.0),
    // -0.23197068724628617  -0.7858302387420671   0.40824829046386363
    // -0.5253220933012336   -0.08675133925662833  -0.816496580927726
    // -0.8186734993561815   0.61232756022881      0.4082482904638625
    // )

    // 求逆
    val inv1: DenseMatrix[Double] = inv(a)
    println(inv1)
    /**
      * -4.503599627370499E15  9.007199254740992E15    -4.503599627370495E15
      * 9.007199254740998E15   -1.8014398509481984E16  9.007199254740991E15
      * -4.503599627370498E15  9.007199254740992E15    -4.5035996273704955E15
      */

    val svd.SVD(u, s, v) = svd(a)
    println("u:")
    println(u)
    /**
      * u:
      * -0.21483723836839663  0.8872306883463706   0.4082482904638625
      * -0.5205873894647373   0.2496439529882974   -0.8164965809277261
      * -0.8263375405610782   -0.3879427823697744  0.4082482904638633
      */
    println("s:")
    println(s)
    /**
      * s:
      * DenseVector(16.84810335261421, 1.06836951455471, 4.4184247511933675E-16)
      */
    println("v:")
    println(v)
    /**
      * v:
      * -0.4796711778777715  -0.5723677939720624   -0.6650644100663531
      * -0.7766909903215595  -0.07568647010455853  0.6253180501124426
      * -0.4082482904638631  0.8164965809277263    -0.4082482904638631
      */

    // 矩阵行数
    val rows: Int = a.rows
    println(rows)     // 3

    // 矩阵列数
    val cols: Int = a.cols
    println(cols)     // 3

  }
}
